{"version":3,"sources":["components/Legend/Legend.Provider.tsx","../../node_modules/clsx/dist/clsx.m.js","../../src/TableHeader.tsx","../../src/TableBody.tsx","../../src/Table.tsx","views/parts/SimpleTable/SimpleTable.tsx","views/parts/SimpleTableActions/SimpleTableActions.tsx","views/parts/SimpleTableScroll/SimpleTableScroll.tsx","views/IndexView.tsx","App.tsx","index.tsx"],"names":["LegendContext","React","createContext","LegendProvider","children","Provider","value","toVal","mix","k","y","str","Array","isArray","length","tmp","x","i","arguments","TableHeader","classNames","className","clsx","columns","column","key","field","style","maxWidth","width","renderColumn","TableBody","root","data","row","index","Table","renderTableHeader","tableHeaderElement","header","tableBodyElement","renderTableBody","body","SimpleTable","push","name","faker","firstName","surname","lastName","title","renderCol","_","__","SimpleTableActions","onClick","alert","SimpleTableScroll","IndexView","target","href","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.090623d7.chunk.js","sourcesContent":["import React from 'react';\n\nexport interface ILegendContext {\n\n}\n\nexport const LegendContext = React.createContext<ILegendContext>({} as ILegendContext);\n\nexport const useLegendContext = () => React.useContext(LegendContext);\n\nexport const LegendProvider: React.FC = ({ children }) => {\n\n  const contextValue = {\n\n  }\n\n  return (\n    <LegendContext.Provider value={contextValue}>\n      {children}\n    </LegendContext.Provider>\n  );\n}","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { Column } from './models/column.models'\n\nexport interface ITableHeaderClassnames {\n  root?: string\n  column?: string\n}\n\ninterface ITableHeaderProps {\n  columns: Column<any>[]\n  classNames?: ITableHeaderClassnames\n}\n\nexport const TableHeader: React.FC<ITableHeaderProps> = ({\n  columns,\n  classNames\n}) => {\n  const renderColumn = (column: Column<any>, index: number) => {\n    if (column.renderHeaderCol) {\n      return column.renderHeaderCol(column, index)\n    }\n    return column.title || column.field\n  }\n\n  return (\n    <div className={clsx('flex', classNames?.root)}>\n      {columns.map((column, index) => (\n        <div\n          className={clsx(\n            'flex-1',\n            classNames?.column,\n            column?.classNames?.header\n          )}\n          key={column.field}\n          style={{\n            maxWidth: column.width\n          }}\n        >\n          {renderColumn(column, index)}\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { Column } from './models/column.models'\n\nexport interface ITableBodyClassnames {\n  root?: string\n  row?: string\n  column?: string\n}\n\ninterface ITableBodyProps {\n  columns: Column<any>[]\n  data: any[]\n  classNames?: ITableBodyClassnames\n}\n\nexport const TableBody: React.FC<ITableBodyProps> = ({\n  columns,\n  data,\n  classNames\n}) => {\n  const renderColumn = (column: Column<any>, row: any, index: number) => {\n    if (column.renderCol) {\n      return column.renderCol(column, row, index)\n    }\n    return row[column.field]\n  }\n\n  return (\n    <div className={classNames?.root}>\n      {data.map((row, index) => (\n        <div\n          key={row.id || row.uuid || index}\n          className={clsx('flex items-center', classNames?.row)}\n        >\n          {columns.map((column) => (\n            <div\n              key={column.field}\n              className={clsx(\n                'flex-1',\n                classNames?.column,\n                column.classNames?.body\n              )}\n              style={{\n                maxWidth: column.width\n              }}\n            >\n              {renderColumn(column, row, index)}\n            </div>\n          ))}\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Column } from './models/column.models'\nimport { ITableHeaderClassnames, TableHeader } from './TableHeader'\nimport { ITableBodyClassnames, TableBody } from './TableBody'\n\ninterface ITableClassnames {\n  root?: string\n  header?: ITableHeaderClassnames\n  body?: ITableBodyClassnames\n}\n\ninterface ITableProps {\n  data: any[]\n  columns: Column<any>[]\n  classNames?: ITableClassnames\n  renderTableBody?: (\n    data: any[],\n    columns: Column<any>[],\n    classNames?: ITableHeaderClassnames\n  ) => React.ReactElement\n  renderTableHeader?: (\n    columns: Column<any>[],\n    classNames?: ITableBodyClassnames\n  ) => React.ReactElement\n}\n\nexport const Table: React.FC<ITableProps> = ({\n  data,\n  columns,\n  classNames,\n  renderTableBody,\n  renderTableHeader\n}) => {\n  const tableHeaderElement = renderTableHeader ? (\n    renderTableHeader(columns, classNames?.header)\n  ) : (\n    <TableHeader classNames={classNames?.header} columns={columns} />\n  )\n\n  const tableBodyElement = renderTableBody ? (\n    renderTableBody(data, columns, classNames?.body)\n  ) : (\n    <TableBody classNames={classNames?.body} columns={columns} data={data} />\n  )\n\n  return (\n    <div className={classNames?.root}>\n      {tableHeaderElement}\n      {tableBodyElement}\n    </div>\n  )\n}\n","import React from 'react';\nimport { Table, Column } from 'abakus';\nimport faker from 'faker';\n\ninterface IFakeData {\n  name: string;\n  surname: string;\n}\n\nexport const SimpleTable = () => {\n\n  const data: IFakeData[] = [];\n\n  for (let i = 0; i < 3; i++) {\n    data.push({\n      name: faker.name.firstName(),\n      surname: faker.name.lastName(),\n    })\n  }\n\n  const columns: Column<IFakeData>[] = [\n    {\n      field: '',\n      title: 'No',\n      width: 70,\n      classNames: {\n        body: 'test',\n      },\n      renderCol: (_, __, index) => <span>{index}</span>,\n    },\n    {\n      field: 'name',\n      title: 'Name',\n    },\n    {\n      field: 'surname',\n      title: 'Surname',\n    }\n  ];\n\n  return (\n    <section className='mb-8'>\n      <h2 className='text-lg font-semibold mb-2'>Simple Table</h2>\n      <div className='shadow rounded p-8'>\n        <Table \n          classNames={{\n            header: {\n              root: 'font-semibold',\n            }\n          }}\n          data={data}\n          columns={columns} \n        />\n      </div>\n    </section>\n  )\n}","import React from 'react'\nimport { Column, Table } from 'abakus'\nimport faker from 'faker'\n\ninterface IFakeData {\n  name: string\n  surname: string\n}\n\nexport const SimpleTableActions = () => {\n  const data: IFakeData[] = []\n\n  for (let i = 0; i < 3; i++) {\n    data.push({\n      name: faker.name.firstName(),\n      surname: faker.name.lastName()\n    })\n  }\n\n  const columns: Column<IFakeData>[] = [\n    {\n      field: '',\n      title: 'No',\n      width: 70,\n      classNames: {\n        body: 'test'\n      },\n      renderCol: (_, __, index) => <span>{index}</span>\n    },\n    {\n      field: 'name',\n      title: 'Name'\n    },\n    {\n      field: 'surname',\n      title: 'Surname'\n    },\n    {\n      field: '',\n      title: 'Actions',\n      width: 100,\n      renderCol: () => <button onClick={() => alert('Hello World')} className='rounded-xs px-4 text-xs text-white bg-black border border-black border-opacity-10 bg-opacity-30'>Click me</button>\n    }\n  ]\n\n  return (\n    <section className='mb-8'>\n      <h2 className='text-lg font-semibold mb-2'>Simple Table with actions</h2>\n      <div className='shadow rounded p-8'>\n        <Table\n          classNames={{\n            header: {\n              root: 'top-0 sticky bg-white font-semibold'\n            }\n          }}\n          data={data}\n          columns={columns}\n        />\n      </div>\n    </section>\n  )\n}\n","import React from 'react';\nimport { Column, Table } from 'abakus';\nimport faker from 'faker';\n\ninterface IFakeData {\n  name: string;\n  surname: string;\n}\n\nexport const SimpleTableScroll = () => {\n\n  const data: IFakeData[] = [];\n\n  for (let i = 0; i < 30; i++) {\n    data.push({\n      name: faker.name.firstName(),\n      surname: faker.name.lastName(),\n    })\n  }\n\n  const columns: Column<IFakeData>[] = [\n    {\n      field: '',\n      title: 'No',\n      width: 70,\n      classNames: {\n        body: 'test',\n      },\n      renderCol: (_, __, index) => <span>{index}</span>,\n    },\n    {\n      field: 'name',\n      title: 'Name',\n    },\n    {\n      field: 'surname',\n      title: 'Surname',\n    }\n  ];\n\n  return (\n    <section className='mb-8'>\n      <h2 className='text-lg font-semibold mb-2'>Simple Table with sroll</h2>\n      <div className='shadow rounded p-8'>\n        \n        <div className='h-32 overflow-auto'>\n          <Table \n            classNames={{\n              header: {\n                root: 'top-0 sticky bg-white font-semibold'\n              }\n            }}\n            data={data}\n            columns={columns} \n          />\n        </div>\n\n      </div>\n    </section>\n  )\n\n}","import React from 'react';\nimport { SimpleTable } from './parts/SimpleTable/SimpleTable';\nimport { SimpleTableActions } from './parts/SimpleTableActions/SimpleTableActions';\nimport { SimpleTableScroll } from './parts/SimpleTableScroll/SimpleTableScroll';\n\nexport const IndexView: React.FC = () => {\n  return (\n    <div className='container px-4 mx-auto'>\n\n      <div className='py-8'>\n        <h1 className='font-semibold text-3xl leading-none inline-block align-middle mr-2'>abakus</h1>\n        <h2 className='text-lg leading-none inline-block align-bottom'>React {'&'} TailwindCSS Table Component</h2>\n        <p className=\"mt-4 ml-4\">\n          Source code of that page can be found <a target=\"__blank\" className=\"font-semibold\" href=\"https://github.com/kolezka/abakus/tree/master/example\">here</a> \n        </p>\n      </div>\n\n      <SimpleTable />\n      <SimpleTableScroll />\n      <SimpleTableActions />\n\n    </div>\n  )\n}","import React from \"react\";\n\n// import { Table } from \"abakus\";\n// import { Column } from \"abakus/src/models/column.models\";\nimport { LegendProvider } from \"./components/Legend/Legend.Provider\";\nimport { IndexView } from \"./views/IndexView\";\n\nimport \"tailwindcss/dist/tailwind.css\";\nimport \"./index.css\";\n\nconst App = () => {\n  return (\n    <LegendProvider>\n      <IndexView />\n    </LegendProvider>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}